"""
Каждый класс реализовать в отдельном модуле, импортируя их в производные модули.
Создать класс Item с полями название, цена. Добавить конструктор класса.
Создать производный от Item класс Drink. Новые поля: объем напитка, раздел меню, состав напитка
    (словарь вида название ингредиента: количество). Определить конструктор, с вызовом родительского конструктора.
    Определить функции добавления и удаления ингредиента, форматированной печати состава напитка. Переопределить
    метод преобразования в строку для печати основной информации (название, раздел меню, объем, цена).
Создать производный от Item класс Food. Новые поля: масса блюда, время приготовления, состав блюда (список
    ингредиентов). Определить конструктор, с вызовом родительского конструктора. Определить функции изменения
    времени приготовления, добавления, удаления и изменения списка ингредиентов. Переопределить метод
    преобразования в строку для печати основной информации (название, масса, цена, время приготовления).
Создать класс Menu. Поля: название ресторана, адрес, список напитков (список экземпляров класса Drink), список
    горячих блюд (список экземпляров класса Food). Определить конструктор. Переопределить метод преобразования
    в строку для печати всей информации о меню (с использованием переопределения в классах Drink и Food).
    Переопределить методы получения количества пунктов меню функцией len, получения напитка/блюда по индексу
    изменения по индексу, удаления по индексу (пусть вначале идут индексы напитков, затем горячих блюд).

    Переопределить операции + и - для добавления или удаления пункта меню. 

    Добавить функцию создания txt-файла
    и записи всей информации в него (в том числе списков ингредиентов напитков и блюд).

Предусмотреть хотя бы в 3 местах обработку возможных исключений.
В каждом модуле провести подробное тестирование всех создаваемых объектов и функций.
"""

from Menu import Menu,Drink,Food

#ОБЪЕКТЫ Drink
ingredients_drink1 = {"Карамельный сироп": 50}
drink1 = Drink("Вода с сиропом", 150, "Напитки", 300, ingredients_drink1) 
drink1.add_ingredient("Вода",150)
drink1.remove_ingredient("Лимонная кислота",50) 
#drink1.print_ingredients() # напечатал все ингредиенты 
drink2 = Drink("Sprite", 50, "Напитки", 250)
drink2.add_ingredient("Сироп лайма", 15)
drink2.add_ingredient("Кислота лимонная", 10)


# Объекты Food
ingredients_food1 = {"Тесто для пиццы", "Сыр моцарелла", "Помидоры"}
food1 = Food("Салат цезарь",200,120,600,ingredients_food1)
food2 = Food("Пицца Маргарита",500,450,300)
food2.add_ingredient("Тесто для пиццы")
food2.add_ingredient("Сыр моцарелла", 100)
food2.add_ingredient("Помидоры", 20)

# Объект Menu
restaurant_menu = Menu("Ресторан 'Приятного Аппетита'", "ул. Старобитцевская д. 32", [drink1, drink2], [food1, food2])
print(restaurant_menu) # Выводим всю информацию о меню
print(len(restaurant_menu)) # Получаем количество пунктов меню

restaurant_menu[1] #Получаем напитка и блюда по номеру
restaurant_menu[3]
#restaurant_menu[6]

#  измеянем по индексу напитки
(1,"Вода с сиропам v2.0", 100, "Напитки", 300, {"Карамельный сироп": 50 , "Ягодный сироп": 40})


new_change_eda = Drink("Вода с сиропам v2.0", 100, "Напитки", 300, {"Карамельный сироп": 50 , "Ягодный сироп": 40})
restaurant_menu[1] = new_change_eda

# # Удаляем напиток по индексу
del restaurant_menu[1]

print(restaurant_menu) # Выводим всю информацию о меню для проверки изменений


restaurant_menu += Drink("Прохладный чай", 30, "Прохладительные напитки",200, {"чай": 10, "сахар":10, "лемон":10, "вода":150})
restaurant_menu -= food2

print(restaurant_menu) # Выводим всю информацию о меню для проверки изменений

# # Создаем txt-файл и записываем всю информацию в него
restaurant_menu.save_to_file("restaurant_menu.txt")